/**
 * Ziqni Gateway Services
 * These are the Gateway services to be used by customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.@ZiqniTechGatewayApiClient);
  }
}(this, function(expect, @ZiqniTechGatewayApiClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new @ZiqniTechGatewayApiClient.Achievement();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Achievement', function() {
    it('should create an instance of Achievement', function() {
      // uncomment below and update the code to test Achievement
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be.a(@ZiqniTechGatewayApiClient.Achievement);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property scheduling (base name: "scheduling")', function() {
      // uncomment below and update the code to test the property scheduling
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property dependantOn (base name: "dependantOn")', function() {
      // uncomment below and update the code to test the property dependantOn
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property icon (base name: "icon")', function() {
      // uncomment below and update the code to test the property icon
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property rewards (base name: "rewards")', function() {
      // uncomment below and update the code to test the property rewards
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property deprecated (base name: "deprecated")', function() {
      // uncomment below and update the code to test the property deprecated
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property products (base name: "products")', function() {
      // uncomment below and update the code to test the property products
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property ruleSets (base name: "ruleSets")', function() {
      // uncomment below and update the code to test the property ruleSets
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property achievementLiveStatus (base name: "achievementLiveStatus")', function() {
      // uncomment below and update the code to test the property achievementLiveStatus
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property initialState (base name: "initialState")', function() {
      // uncomment below and update the code to test the property initialState
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new @ZiqniTechGatewayApiClient.Achievement();
      //expect(instance).to.be();
    });

  });

}));
