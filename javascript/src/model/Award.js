/**
 * Ziqni Gateway Services
 * These are the Gateway services to be used by customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Reward from './Reward';

/**
 * The Award model module.
 * @module model/Award
 * @version 0.0.1
 */
class Award {
    /**
     * Constructs a new <code>Award</code>.
     * @alias module:model/Award
     */
    constructor() { 
        
        Award.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Award</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Award} obj Optional instance to populate.
     * @return {module:model/Award} The populated <code>Award</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Award();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('memberId')) {
                obj['memberId'] = ApiClient.convertToType(data['memberId'], 'String');
            }
            if (data.hasOwnProperty('reward')) {
                obj['reward'] = Reward.constructFromObject(data['reward']);
            }
            if (data.hasOwnProperty('claimed')) {
                obj['claimed'] = ApiClient.convertToType(data['claimed'], 'Boolean');
            }
            if (data.hasOwnProperty('entityType')) {
                obj['entityType'] = ApiClient.convertToType(data['entityType'], 'String');
            }
            if (data.hasOwnProperty('entityId')) {
                obj['entityId'] = ApiClient.convertToType(data['entityId'], 'String');
            }
            if (data.hasOwnProperty('period')) {
                obj['period'] = ApiClient.convertToType(data['period'], 'Number');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} accountId
 */
Award.prototype['accountId'] = undefined;

/**
 * @member {String} memberId
 */
Award.prototype['memberId'] = undefined;

/**
 * @member {module:model/Reward} reward
 */
Award.prototype['reward'] = undefined;

/**
 * @member {Boolean} claimed
 */
Award.prototype['claimed'] = undefined;

/**
 * @member {String} entityType
 */
Award.prototype['entityType'] = undefined;

/**
 * @member {String} entityId
 */
Award.prototype['entityId'] = undefined;

/**
 * @member {Number} period
 */
Award.prototype['period'] = undefined;

/**
 * @member {Date} created
 */
Award.prototype['created'] = undefined;

/**
 * @member {String} id
 */
Award.prototype['id'] = undefined;






export default Award;

