/*
 * Ziqni Gateway Services
 * These are the Gateway services to be used by customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.gateway.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SubRule
 */
@JsonPropertyOrder({
  SubRule.JSON_PROPERTY_JSON_CLASS,
  SubRule.JSON_PROPERTY_FACT,
  SubRule.JSON_PROPERTY_OPERATOR,
  SubRule.JSON_PROPERTY_CONSTANT
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SubRule {
  public static final String JSON_PROPERTY_JSON_CLASS = "jsonClass";
  private String jsonClass;

  public static final String JSON_PROPERTY_FACT = "fact";
  private String fact;

  public static final String JSON_PROPERTY_OPERATOR = "operator";
  private String operator;

  public static final String JSON_PROPERTY_CONSTANT = "constant";
  private String constant;


  public SubRule jsonClass(String jsonClass) {
    this.jsonClass = jsonClass;
    return this;
  }

   /**
   * Get jsonClass
   * @return jsonClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_JSON_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJsonClass() {
    return jsonClass;
  }


  @JsonProperty(JSON_PROPERTY_JSON_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJsonClass(String jsonClass) {
    this.jsonClass = jsonClass;
  }


  public SubRule fact(String fact) {
    this.fact = fact;
    return this;
  }

   /**
   * Get fact
   * @return fact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFact() {
    return fact;
  }


  @JsonProperty(JSON_PROPERTY_FACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFact(String fact) {
    this.fact = fact;
  }


  public SubRule operator(String operator) {
    this.operator = operator;
    return this;
  }

   /**
   * Get operator
   * @return operator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOperator() {
    return operator;
  }


  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperator(String operator) {
    this.operator = operator;
  }


  public SubRule constant(String constant) {
    this.constant = constant;
    return this;
  }

   /**
   * Get constant
   * @return constant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONSTANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConstant() {
    return constant;
  }


  @JsonProperty(JSON_PROPERTY_CONSTANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConstant(String constant) {
    this.constant = constant;
  }


  /**
   * Return true if this SubRule object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubRule subRule = (SubRule) o;
    return Objects.equals(this.jsonClass, subRule.jsonClass) &&
        Objects.equals(this.fact, subRule.fact) &&
        Objects.equals(this.operator, subRule.operator) &&
        Objects.equals(this.constant, subRule.constant);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jsonClass, fact, operator, constant);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubRule {\n");
    sb.append("    jsonClass: ").append(toIndentedString(jsonClass)).append("\n");
    sb.append("    fact: ").append(toIndentedString(fact)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    constant: ").append(toIndentedString(constant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

