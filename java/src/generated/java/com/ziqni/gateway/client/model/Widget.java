/*
 * Ziqni Gateway Services
 * These are the Gateway services to be used by customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.gateway.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ziqni.gateway.client.model.WidgetReference;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Widget
 */
@JsonPropertyOrder({
  Widget.JSON_PROPERTY_JSON_CLASS,
  Widget.JSON_PROPERTY_NAME,
  Widget.JSON_PROPERTY_DESCRIPTION,
  Widget.JSON_PROPERTY_ACCOUNT_ID,
  Widget.JSON_PROPERTY_REFERENCE_ID_LIST,
  Widget.JSON_PROPERTY_CATEGORY,
  Widget.JSON_PROPERTY_THEME_NAME,
  Widget.JSON_PROPERTY_WIDGET_TYPE,
  Widget.JSON_PROPERTY_INCLUDE_DEPENDENCIES,
  Widget.JSON_PROPERTY_DEPRECATED,
  Widget.JSON_PROPERTY_CREATED,
  Widget.JSON_PROPERTY_ID
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Widget {
  public static final String JSON_PROPERTY_JSON_CLASS = "jsonClass";
  private String jsonClass;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
  private String accountId;

  public static final String JSON_PROPERTY_REFERENCE_ID_LIST = "referenceIdList";
  private WidgetReference referenceIdList;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private List<String> category = null;

  public static final String JSON_PROPERTY_THEME_NAME = "themeName";
  private String themeName;

  public static final String JSON_PROPERTY_WIDGET_TYPE = "widgetType";
  private String widgetType;

  public static final String JSON_PROPERTY_INCLUDE_DEPENDENCIES = "includeDependencies";
  private Boolean includeDependencies;

  public static final String JSON_PROPERTY_DEPRECATED = "deprecated";
  private Boolean deprecated;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;


  public Widget jsonClass(String jsonClass) {
    this.jsonClass = jsonClass;
    return this;
  }

   /**
   * Get jsonClass
   * @return jsonClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_JSON_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJsonClass() {
    return jsonClass;
  }


  @JsonProperty(JSON_PROPERTY_JSON_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJsonClass(String jsonClass) {
    this.jsonClass = jsonClass;
  }


  public Widget name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public Widget description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Widget accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public Widget referenceIdList(WidgetReference referenceIdList) {
    this.referenceIdList = referenceIdList;
    return this;
  }

   /**
   * Get referenceIdList
   * @return referenceIdList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REFERENCE_ID_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WidgetReference getReferenceIdList() {
    return referenceIdList;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_ID_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceIdList(WidgetReference referenceIdList) {
    this.referenceIdList = referenceIdList;
  }


  public Widget category(List<String> category) {
    this.category = category;
    return this;
  }

  public Widget addCategoryItem(String categoryItem) {
    if (this.category == null) {
      this.category = new ArrayList<>();
    }
    this.category.add(categoryItem);
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(List<String> category) {
    this.category = category;
  }


  public Widget themeName(String themeName) {
    this.themeName = themeName;
    return this;
  }

   /**
   * Get themeName
   * @return themeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_THEME_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getThemeName() {
    return themeName;
  }


  @JsonProperty(JSON_PROPERTY_THEME_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThemeName(String themeName) {
    this.themeName = themeName;
  }


  public Widget widgetType(String widgetType) {
    this.widgetType = widgetType;
    return this;
  }

   /**
   * Get widgetType
   * @return widgetType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WIDGET_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWidgetType() {
    return widgetType;
  }


  @JsonProperty(JSON_PROPERTY_WIDGET_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWidgetType(String widgetType) {
    this.widgetType = widgetType;
  }


  public Widget includeDependencies(Boolean includeDependencies) {
    this.includeDependencies = includeDependencies;
    return this;
  }

   /**
   * Get includeDependencies
   * @return includeDependencies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INCLUDE_DEPENDENCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIncludeDependencies() {
    return includeDependencies;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_DEPENDENCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeDependencies(Boolean includeDependencies) {
    this.includeDependencies = includeDependencies;
  }


  public Widget deprecated(Boolean deprecated) {
    this.deprecated = deprecated;
    return this;
  }

   /**
   * Get deprecated
   * @return deprecated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEPRECATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeprecated() {
    return deprecated;
  }


  @JsonProperty(JSON_PROPERTY_DEPRECATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeprecated(Boolean deprecated) {
    this.deprecated = deprecated;
  }


  public Widget created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public Widget id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  /**
   * Return true if this Widget object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Widget widget = (Widget) o;
    return Objects.equals(this.jsonClass, widget.jsonClass) &&
        Objects.equals(this.name, widget.name) &&
        Objects.equals(this.description, widget.description) &&
        Objects.equals(this.accountId, widget.accountId) &&
        Objects.equals(this.referenceIdList, widget.referenceIdList) &&
        Objects.equals(this.category, widget.category) &&
        Objects.equals(this.themeName, widget.themeName) &&
        Objects.equals(this.widgetType, widget.widgetType) &&
        Objects.equals(this.includeDependencies, widget.includeDependencies) &&
        Objects.equals(this.deprecated, widget.deprecated) &&
        Objects.equals(this.created, widget.created) &&
        Objects.equals(this.id, widget.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jsonClass, name, description, accountId, referenceIdList, category, themeName, widgetType, includeDependencies, deprecated, created, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Widget {\n");
    sb.append("    jsonClass: ").append(toIndentedString(jsonClass)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    referenceIdList: ").append(toIndentedString(referenceIdList)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    themeName: ").append(toIndentedString(themeName)).append("\n");
    sb.append("    widgetType: ").append(toIndentedString(widgetType)).append("\n");
    sb.append("    includeDependencies: ").append(toIndentedString(includeDependencies)).append("\n");
    sb.append("    deprecated: ").append(toIndentedString(deprecated)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

