/*
* Copyright (c) 2022. ZIQNI LTD registered in England and Wales, company registration number-09693684
*/
/*
 * Ziqni Gateway Services
 * These are the Gateway services to be used by customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ziqni.gateway.client.api;

import com.ziqni.gateway.client.StreamingClient;
import com.ziqni.gateway.client.ApiClient;
import com.ziqni.gateway.client.ApiException;
import com.ziqni.gateway.client.ApiResponse;
import com.ziqni.gateway.client.Pair;
import com.ziqni.gateway.client.ws.WsCompletableFuture;
import com.ziqni.gateway.client.model.ApiErrorResponse;
import com.ziqni.gateway.client.model.Error;
import com.ziqni.gateway.client.model.MemberMessageResponse;
import java.time.OffsetDateTime;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.time.Duration;
import java.util.*;

import java.util.concurrent.CompletableFuture;

@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
    public class MemberMessagesApiWs extends MemberMessagesApi {
    private final ApiClient apiClient;
    private final ObjectMapper memberVarObjectMapper;
    private final Duration memberVarReadTimeout;
    private final StreamingClient streamingClient;

    public MemberMessagesApiWs(ApiClient apiClient, StreamingClient streamingClient, Duration readTimeout) {
        this.apiClient = apiClient;
        this.memberVarObjectMapper = apiClient.getObjectMapper();
        this.streamingClient = streamingClient;
        this.memberVarReadTimeout = null;
    }

        /**
        * Returns messages for a member by requested id
        * Returns member message details for the member and message ID specified. When a message with a status of New is accessed by this endpoint then the status of the message becomes Read automatically.
            * @param X_API_KEY Your unique API key (required)
            * @param spaceName This is the space name which is linked to the account (required)
            * @param memberId Id of a Member (required)
            * @param id Unique identifier of the resource (required)
            * @return CompletableFuture&lt;MemberMessageResponse&gt;
        * @throws ApiException if fails to make API call
        */
        public CompletableFuture<MemberMessageResponse> getMessageByIdAndMemberId(String X_API_KEY, String spaceName, String memberId, String id) {
        var request = new HashMap<String, Object>();
        
                

        var pathParam = new HashMap<String, Object>();
        pathParam.put("spaceName", spaceName);
pathParam.put("memberId", memberId);
pathParam.put("id", id);
        request.put("path",pathParam);
        

        CompletableFuture<MemberMessageResponse> result = new WsCompletableFuture(this.streamingClient, "/aapi/getMessageByIdAndMemberId", request);
        return result;
        }
        /**
        * Returns messages for a member by requested id
        * Returns member message details for the member and message ID specified. When a message with a status of New is accessed by this endpoint then the status of the message becomes Read automatically.
            * @param X_API_KEY Your unique API key (required)
            * @param spaceName This is the space name which is linked to the account (required)
            * @param memberRefId Reference Id of a Member (required)
            * @param id Unique identifier of the resource (required)
            * @return CompletableFuture&lt;MemberMessageResponse&gt;
        * @throws ApiException if fails to make API call
        */
        public CompletableFuture<MemberMessageResponse> getMessageByIdAndMemberRefId(String X_API_KEY, String spaceName, String memberRefId, String id) {
        var request = new HashMap<String, Object>();
        
                

        var pathParam = new HashMap<String, Object>();
        pathParam.put("spaceName", spaceName);
pathParam.put("memberRefId", memberRefId);
pathParam.put("id", id);
        request.put("path",pathParam);
        

        CompletableFuture<MemberMessageResponse> result = new WsCompletableFuture(this.streamingClient, "/aapi/getMessageByIdAndMemberRefId", request);
        return result;
        }
        /**
        * Returns messages for a member by requested id
        * Returns a list of available messages for the specified memberId.  GET responses can be filtered out based on the member messages parameters to narrow down the results.
            * @param X_API_KEY Your unique API key (required)
            * @param spaceName This is the space name which is linked to the account (required)
            * @param id The unique identifiers of the resources (optional
            * @param eventRefType Defines an event type attached to the message. Case sensitive Supported values - &#x60;CompetitionType&#x60; &#x60;ContestType&#x60; &#x60;AchievementType&#x60;  &#x60;?eventRefType&#x3D;search_string&#x60; (optional)
            * @param eventReferenceId The reference ID of the event object. Case sensitive   &#x60;?eventReferenceId&#x3D;search_string&#x60; (optional)
            * @param messageType The type of message of the member. Case sensitive Supported values - &#x60;Notification&#x60; &#x60;Achievement&#x60; &#x60;Reward&#x60;  &#x60;?messageType&#x3D;search_string&#x60; (optional)
            * @param subject The title of the message. Case sensitive  &#x60;?subject&#x3D;search_string&#x60; (optional)
            * @param prizeRewardEntityType Can be achievement or contest. Case sensitive Supported values - &#x60;Achievement&#x60; &#x60;Contest&#x60;  &#x60;?prize.reward.entityType&#x3D;search_string&#x60; (optional)
            * @param prizeRewardEntityId Achievement id or Contest id. Case sensitive   &#x60;?prize.reward.entityId&#x3D;search_string&#x60; (optional)
            * @param prizeRewardRewardRank If used in the context of contest this will associate with the rank of the leaderboard. Case sensitive  &#x60;?prize.reward.rewardRank&#x3D;search_string&#x60; (optional)
            * @param prizeRewardValue Numerical value of the reward that will be issued based on the reward type  &#x60;?prize.reward.value&#x3D;search_double&#x60; (optional)
            * @param prizeRewardRewardType Reward type id   &#x60;?prize.reward.rewardType&#x3D;search_string&#x60; (optional)
            * @param prizeRewardDelay Delay of issuing a reward in minutes   &#x60;?prize.reward.delay&#x3D;search_integer&#x60; (optional)
            * @param prizeRewardMemberAcknowledgmentRequired To claim a reward   &#x60;?prize.reward.memberAcknowledgmentRequired&#x3D;search_boolean&#x60; (optional)
            * @param prizeRewardMetadataKey Search by reward metadata key.   &#x60;?prize.reward.metadata.key&#x3D;search_word&#x60; (optional)
            * @param prizeRewardMetadataValue Search by reward metadata value.   &#x60;?prize.reward.metadata.value&#x3D;search_word&#x60; (optional)
            * @param prizeRewardCreated ISO8601 timestamp for when a Reward was created. All records are stored in UTC time zone.   &#x60;?prize.reward.created&#x3D;search_datetime&#x60; (optional)
            * @param prizeRewardId Search by reward id. Case sensitive   &#x60;?prize.reward.id&#x3D;search_string&#x60; (optional)
            * @param prizeClaimed Has the award been claimed or not.   &#x60;?prize.claimed&#x3D;search_boolean&#x60; (optional)
            * @param prizeEntityType The type of entity this Award relates to. Case sensitive   Supported values -   &#x60;Contest&#x60; &#x60;Achievement&#x60;   &#x60;?prize.entityType&#x3D;search_word&#x60; (optional)
            * @param prizeEntityId The Id of the contest or achievement related to this Award. Case sensitive   &#x60;?prize.entityId&#x3D;search_string&#x60; (optional)
            * @param prizeCreated ISO8601 timestamp for when a Reward was created. All records are stored in UTC time zone.   &#x60;?prize.created&#x3D;search_datetime&#x60; (optional)
            * @param prizeId Award id. Case sensitive   &#x60;?prize.id&#x3D;search_word&#x60; (optional)
            * @param status The status of the message. Case sensitive  Supported values - &#x60;New&#x60; &#x60;Read&#x60; &#x60;CollaborationRequest&#x60; &#x60;Actioned&#x60; &#x60;Claimed&#x60; &#x60;Expired&#x60; &#x60;Canceled&#x60; &#x60;Deprecated&#x60;   &#x60;?status&#x3D;search_string&#x60; (optional)
            * @param created Works with simple dates or date and time, eg:   &#x60;?created&#x3D;&lt;created-date&gt;&#x60; (optional)
            * @param metadataKey Search by metadata key. Case sensitive.  &#x60;?metadata.key&#x3D;search_word&#x60; (optional)
            * @param metadataValue Search by metadata value. Case sensitive.  &#x60;?metadata.value&#x3D;search_word&#x60; (optional)
            * @return CompletableFuture&lt;MemberMessageResponse&gt;
        * @throws ApiException if fails to make API call
        */
        public CompletableFuture<MemberMessageResponse> getMessagesByMemberId(String X_API_KEY, String spaceName, List<String> id, String eventRefType, String eventReferenceId, String messageType, String subject, String prizeRewardEntityType, String prizeRewardEntityId, String prizeRewardRewardRank, Double prizeRewardValue, String prizeRewardRewardType, Integer prizeRewardDelay, Boolean prizeRewardMemberAcknowledgmentRequired, String prizeRewardMetadataKey, String prizeRewardMetadataValue, OffsetDateTime prizeRewardCreated, String prizeRewardId, Boolean prizeClaimed, String prizeEntityType, String prizeEntityId, OffsetDateTime prizeCreated, String prizeId, String status, OffsetDateTime created, String metadataKey, String metadataValue) {
        var request = new HashMap<String, Object>();
        var queryParam = new HashMap<String, Object>();
        queryParam.put("id", id);
queryParam.put("eventRefType", eventRefType);
queryParam.put("eventReferenceId", eventReferenceId);
queryParam.put("messageType", messageType);
queryParam.put("subject", subject);
queryParam.put("prizeRewardEntityType", prizeRewardEntityType);
queryParam.put("prizeRewardEntityId", prizeRewardEntityId);
queryParam.put("prizeRewardRewardRank", prizeRewardRewardRank);
queryParam.put("prizeRewardValue", prizeRewardValue);
queryParam.put("prizeRewardRewardType", prizeRewardRewardType);
queryParam.put("prizeRewardDelay", prizeRewardDelay);
queryParam.put("prizeRewardMemberAcknowledgmentRequired", prizeRewardMemberAcknowledgmentRequired);
queryParam.put("prizeRewardMetadataKey", prizeRewardMetadataKey);
queryParam.put("prizeRewardMetadataValue", prizeRewardMetadataValue);
queryParam.put("prizeRewardCreated", prizeRewardCreated);
queryParam.put("prizeRewardId", prizeRewardId);
queryParam.put("prizeClaimed", prizeClaimed);
queryParam.put("prizeEntityType", prizeEntityType);
queryParam.put("prizeEntityId", prizeEntityId);
queryParam.put("prizeCreated", prizeCreated);
queryParam.put("prizeId", prizeId);
queryParam.put("status", status);
queryParam.put("created", created);
queryParam.put("metadataKey", metadataKey);
queryParam.put("metadataValue", metadataValue);
        request.put("query",queryParam);

        var pathParam = new HashMap<String, Object>();
        pathParam.put("spaceName", spaceName);
        request.put("path",pathParam);
        

        CompletableFuture<MemberMessageResponse> result = new WsCompletableFuture(this.streamingClient, "/aapi/getMessagesByMemberId", request);
        return result;
        }
        /**
        * Returns messages for a member by requested reference id
        * Returns a list of available messages for the specified member Reference ID.  GET responses can be filtered out based on the member messages parameters to narrow down the results.
            * @param X_API_KEY Your unique API key (required)
            * @param spaceName This is the space name which is linked to the account (required)
            * @param memberRefId Reference Id of a Member (required)
            * @param eventRefType Defines an event type attached to the message. Case sensitive Supported values - &#x60;CompetitionType&#x60; &#x60;ContestType&#x60; &#x60;AchievementType&#x60;  &#x60;?eventRefType&#x3D;search_string&#x60; (optional)
            * @param eventReferenceId The reference ID of the event object. Case sensitive   &#x60;?eventReferenceId&#x3D;search_string&#x60; (optional)
            * @param messageType The type of message of the member. Case sensitive Supported values - &#x60;Notification&#x60; &#x60;Achievement&#x60; &#x60;Reward&#x60;  &#x60;?messageType&#x3D;search_string&#x60; (optional)
            * @param subject The title of the message. Case sensitive  &#x60;?subject&#x3D;search_string&#x60; (optional)
            * @param prizeRewardEntityType Can be achievement or contest. Case sensitive Supported values - &#x60;Achievement&#x60; &#x60;Contest&#x60;  &#x60;?prize.reward.entityType&#x3D;search_string&#x60; (optional)
            * @param prizeRewardEntityId Achievement id or Contest id. Case sensitive   &#x60;?prize.reward.entityId&#x3D;search_string&#x60; (optional)
            * @param prizeRewardRewardRank If used in the context of contest this will associate with the rank of the leaderboard. Case sensitive  &#x60;?prize.reward.rewardRank&#x3D;search_string&#x60; (optional)
            * @param prizeRewardValue Numerical value of the reward that will be issued based on the reward type  &#x60;?prize.reward.value&#x3D;search_double&#x60; (optional)
            * @param prizeRewardRewardType Reward type id   &#x60;?prize.reward.rewardType&#x3D;search_string&#x60; (optional)
            * @param prizeRewardDelay Delay of issuing a reward in minutes   &#x60;?prize.reward.delay&#x3D;search_integer&#x60; (optional)
            * @param prizeRewardMemberAcknowledgmentRequired To claim a reward   &#x60;?prize.reward.memberAcknowledgmentRequired&#x3D;search_boolean&#x60; (optional)
            * @param prizeRewardMetadataKey Search by reward metadata key.   &#x60;?prize.reward.metadata.key&#x3D;search_word&#x60; (optional)
            * @param prizeRewardMetadataValue Search by reward metadata value.   &#x60;?prize.reward.metadata.value&#x3D;search_word&#x60; (optional)
            * @param prizeRewardCreated ISO8601 timestamp for when a Reward was created. All records are stored in UTC time zone.   &#x60;?prize.reward.created&#x3D;search_datetime&#x60; (optional)
            * @param prizeRewardId Search by reward id. Case sensitive   &#x60;?prize.reward.id&#x3D;search_string&#x60; (optional)
            * @param prizeClaimed Has the award been claimed or not.   &#x60;?prize.claimed&#x3D;search_boolean&#x60; (optional)
            * @param prizeEntityType The type of entity this Award relates to. Case sensitive   Supported values -   &#x60;Contest&#x60; &#x60;Achievement&#x60;   &#x60;?prize.entityType&#x3D;search_word&#x60; (optional)
            * @param prizeEntityId The Id of the contest or achievement related to this Award. Case sensitive   &#x60;?prize.entityId&#x3D;search_string&#x60; (optional)
            * @param prizeCreated ISO8601 timestamp for when a Reward was created. All records are stored in UTC time zone.   &#x60;?prize.created&#x3D;search_datetime&#x60; (optional)
            * @param prizeId Award id. Case sensitive   &#x60;?prize.id&#x3D;search_word&#x60; (optional)
            * @param status The status of the message. Case sensitive  Supported values - &#x60;New&#x60; &#x60;Read&#x60; &#x60;CollaborationRequest&#x60; &#x60;Actioned&#x60; &#x60;Claimed&#x60; &#x60;Expired&#x60; &#x60;Canceled&#x60; &#x60;Deprecated&#x60;   &#x60;?status&#x3D;search_string&#x60; (optional)
            * @param created Works with simple dates or date and time, eg:   &#x60;?created&#x3D;&lt;created-date&gt;&#x60; (optional)
            * @param metadataKey Search by metadata key. Case sensitive.  &#x60;?metadata.key&#x3D;search_word&#x60; (optional)
            * @param metadataValue Search by metadata value. Case sensitive.  &#x60;?metadata.value&#x3D;search_word&#x60; (optional)
            * @param id The unique identifiers of the resources (optional
            * @return CompletableFuture&lt;MemberMessageResponse&gt;
        * @throws ApiException if fails to make API call
        */
        public CompletableFuture<MemberMessageResponse> getMessagesByMemberRefId(String X_API_KEY, String spaceName, String memberRefId, String eventRefType, String eventReferenceId, String messageType, String subject, String prizeRewardEntityType, String prizeRewardEntityId, String prizeRewardRewardRank, Double prizeRewardValue, String prizeRewardRewardType, Integer prizeRewardDelay, Boolean prizeRewardMemberAcknowledgmentRequired, String prizeRewardMetadataKey, String prizeRewardMetadataValue, OffsetDateTime prizeRewardCreated, String prizeRewardId, Boolean prizeClaimed, String prizeEntityType, String prizeEntityId, OffsetDateTime prizeCreated, String prizeId, String status, OffsetDateTime created, String metadataKey, String metadataValue, List<String> id) {
        var request = new HashMap<String, Object>();
        var queryParam = new HashMap<String, Object>();
        queryParam.put("eventRefType", eventRefType);
queryParam.put("eventReferenceId", eventReferenceId);
queryParam.put("messageType", messageType);
queryParam.put("subject", subject);
queryParam.put("prizeRewardEntityType", prizeRewardEntityType);
queryParam.put("prizeRewardEntityId", prizeRewardEntityId);
queryParam.put("prizeRewardRewardRank", prizeRewardRewardRank);
queryParam.put("prizeRewardValue", prizeRewardValue);
queryParam.put("prizeRewardRewardType", prizeRewardRewardType);
queryParam.put("prizeRewardDelay", prizeRewardDelay);
queryParam.put("prizeRewardMemberAcknowledgmentRequired", prizeRewardMemberAcknowledgmentRequired);
queryParam.put("prizeRewardMetadataKey", prizeRewardMetadataKey);
queryParam.put("prizeRewardMetadataValue", prizeRewardMetadataValue);
queryParam.put("prizeRewardCreated", prizeRewardCreated);
queryParam.put("prizeRewardId", prizeRewardId);
queryParam.put("prizeClaimed", prizeClaimed);
queryParam.put("prizeEntityType", prizeEntityType);
queryParam.put("prizeEntityId", prizeEntityId);
queryParam.put("prizeCreated", prizeCreated);
queryParam.put("prizeId", prizeId);
queryParam.put("status", status);
queryParam.put("created", created);
queryParam.put("metadataKey", metadataKey);
queryParam.put("metadataValue", metadataValue);
queryParam.put("id", id);
        request.put("query",queryParam);

        var pathParam = new HashMap<String, Object>();
        pathParam.put("spaceName", spaceName);
pathParam.put("memberRefId", memberRefId);
        request.put("path",pathParam);
        

        CompletableFuture<MemberMessageResponse> result = new WsCompletableFuture(this.streamingClient, "/aapi/getMessagesByMemberRefId", request);
        return result;
        }
        }
