/*
 * Ziqni Gateway Services
 * These are the Gateway services to be used by customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ziqni.gateway.client.api;

import com.ziqni.gateway.client.ApiClient;
import com.ziqni.gateway.client.ApiException;
import com.ziqni.gateway.client.ApiResponse;
import com.ziqni.gateway.client.Pair;

import com.ziqni.gateway.client.model.AchievementByIdResponse;
import com.ziqni.gateway.client.model.AchievementResponse;
import com.ziqni.gateway.client.model.ApiErrorResponse;
import com.ziqni.gateway.client.model.Error;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.time.Duration;
import java.util.function.Consumer;

import java.util.ArrayList;
import java.util.StringJoiner;
import java.util.List;
import java.util.Map;

import java.util.concurrent.CompletableFuture;

@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AchievementsApi {
  private final HttpClient memberVarHttpClient;
  private final ObjectMapper memberVarObjectMapper;
  private final String memberVarBaseUri;
  private final Consumer<HttpRequest.Builder> memberVarInterceptor;
  private final Duration memberVarReadTimeout;
  private final Consumer<HttpResponse<InputStream>> memberVarResponseInterceptor;

  public AchievementsApi() {
    this(new ApiClient());
  }

  public AchievementsApi(ApiClient apiClient) {
    memberVarHttpClient = apiClient.getHttpClient();
    memberVarObjectMapper = apiClient.getObjectMapper();
    memberVarBaseUri = apiClient.getBaseUri();
    memberVarInterceptor = apiClient.getRequestInterceptor();
    memberVarReadTimeout = apiClient.getReadTimeout();
    memberVarResponseInterceptor = apiClient.getResponseInterceptor();
  }

  private ApiException getApiException(String operationId, HttpResponse<String> response) {
    String message = formatExceptionMessage(operationId, response.statusCode(), response.body());
    return new ApiException(response.statusCode(), message, response.headers(), response.body());
  }

  private String formatExceptionMessage(String operationId, int statusCode, String body) {
    if (body == null || body.isEmpty()) {
      body = "[no body]";
    }
    return operationId + " call failed with: " + statusCode + " - " + body;
  }

  /**
   * Returns a list of achievements
   * Returns a simplified list of available Achievements.  This assumes that achievements have first been created using the web console. Otherwise no data is returned and the value of the \&quot;totalRecordsFound\&quot; variable in the metadata section of the response is 0.  GET responses can be filtered out based on the achievement parameters to narrow down the results.  &#x60;Requesting a list of Achievements a response will show Achievements that are in Live state and/or Expired.&#x60;   &#x60;Achievements that are in Draft state or Deprecated - will not be displayed.&#x60;   Include query parameter options are:  &#x60;?_include&#x3D;ruleSets&#x60; &#x60;?_include&#x3D;dependantOn&#x60; &#x60;?_include&#x3D;products&#x60; &#x60;?_include&#x3D;metadata&#x60; &#x60;?_include&#x3D;rewards&#x60;  or multiple at the same time: &#x60;?_include&#x3D;products,metadata,ruleSets,dependantOn,rewards&#x60;
   * @param X_API_KEY Your unique API key (required)
   * @param spaceName This is the space name which is linked to the account (required)
   * @param id The unique identifiers of the resources (optional
   * @param limit Used for pagination. Setting the limit value will cause the system to limit the number of records returned to the specified number. (optional)
   * @param skip Used for pagination. Setting the skip value will cause the system to return records from the specified position onwards.  EXAMPLE below returns the results for requested resource without skipping any records  &lt;url&gt;?_limit&#x3D;5&amp;_skip&#x3D;0  EXAMPLE below returns the results for requested resource after skipping the first 10 records  &#x60;&lt;url&gt;?_limit&#x3D;5&amp;_skip&#x3D;10&#x60; (optional)
   * @param sortByFields Enables sorting of results based on fields and order specified.  Supported ordering  &#x60;asc, desc&#x60;   Usage syntax  &#x60;_sortByFields&#x3D;&lt;field-to-sort-on&gt;:&lt;order&gt;&#x60;   EXAMPLE The query will return data sorted by transactionTimestamp in descending order  &#x60;&lt;url&gt;?_sortByFields&#x3D;transactionTimestamp:desc,created:asc&#x60; (optional)
   * @param include Allows you to add the products and metadata objects to the response. Case sensitive (optional)
   * @param lang Allows you to preview the label, description and terms and conditions of the competition in a requested language. Case sensitive (optional)
   * @param equal Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  Single equals sign usage has two types of applications in formulating API queries - * assigning values to predefined/reserved parameters like _skip, _limit, _lang, _sortByFields, _uomKey, _include * assigning values to model based parameters (Example name, transactionTimestamp, options.limitEntrantsTo etc.)  EXAMPLE below returns all competitions in \&quot;Ready\&quot; or \&quot;Active\&quot; state that have either a group1 or group2 entrant limitation  &#x60;&lt;url&gt;/competitions?_skip&#x3D;0&amp;_limit&#x3D;100&amp;status&#x3D;Ready,Active&amp;options.limitEntrantsTo&#x3D;group1,group2&#x60; (optional)
   * @param equalEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  Single equals sign usage has two types of applications in formulating API queries - * assigning values to predefined/reserved parameters like _skip, _limit, _lang, _sortByFields, _uomKey, _include * assigning values to model based parameters (Example name, transactionTimestamp, options.limitEntrantsTo etc.)  EXAMPLE below returns all competitions in \&quot;Ready\&quot; state only that have either a group1 or group2 entrant limitation  &#x60;&lt;url&gt;/competitions?_skip&#x3D;0&amp;_limit&#x3D;100&amp;status&#x3D;&#x3D;Ready&amp;options.limitEntrantsTo&#x3D;group1,group2&#x60; (optional)
   * @param lessThanEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The less than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or less than the specified field value.  EXAMPLE below returns all the data which was uploaded before 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&lt;&#x3D;2021-02-09T17:38:08.328&#x60; (optional)
   * @param lessThanEqualEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The less than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or less than the specified field value.  EXAMPLE below returns all the data which were uploaded before 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&lt;&#x3D;&#x3D;2021-02-09T17:38:08.328&#x60; (optional)
   * @param equalGreaterThan Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The greater than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or greater than the specified field value.  EXAMPLE below returns all the data which were uploaded after 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&#x3D;&gt;2021-02-09T17:38:08.328&#x60; (optional)
   * @param equalEqualGreaterThan Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The greater than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or greater than the specified field value.  EXAMPLE below returns all the data which were uploaded after 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&#x3D;&#x3D;&gt;2021-02-09T17:38:08.328&#x60; (optional)
   * @param deprecated Is the achievement active or deprecated  &#x60;?deprecated&#x3D;search_boolean&#x60; (optional)
   * @param achievementLiveStatus Is the achievement in Live or Draft status  Supported values:  &#x60;Live&#x60; &#x60;Draft&#x60;  &#x60;?achievementLiveStatus&#x3D;search_string&#x60; (optional)
   * @param initialState Is the hidden or visible   Supported Values:   &#x60;1&#x60; and &#x60;0&#x60;   &#x60;?initialState&#x3D;search_integer&#x60; (optional)
   * @return CompletableFuture&lt;AchievementResponse&gt;
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<AchievementResponse> getAchievements(String X_API_KEY, String spaceName, List<String> id, Integer limit, Integer skip, String sortByFields, String include, String lang, String equal, String equalEqual, String lessThanEqual, String lessThanEqualEqual, String equalGreaterThan, String equalEqualGreaterThan, Boolean deprecated, String achievementLiveStatus, Integer initialState) throws ApiException {
    try {
      HttpRequest.Builder localVarRequestBuilder = getAchievementsRequestBuilder(X_API_KEY, spaceName, id, limit, skip, sortByFields, include, lang, equal, equalEqual, lessThanEqual, lessThanEqualEqual, equalGreaterThan, equalEqualGreaterThan, deprecated, achievementLiveStatus, initialState);
      return memberVarHttpClient.sendAsync(
          localVarRequestBuilder.build(),
          HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
            if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(getApiException("getAchievements", localVarResponse));
            }
            try {
              return CompletableFuture.completedFuture(
                  memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<AchievementResponse>() {})
              );
            } catch (IOException e) {
              return CompletableFuture.failedFuture(new ApiException(e));
            }
      });
    }
    catch (ApiException e) {
      return CompletableFuture.failedFuture(e);
    }
  }

  /**
   * Returns a list of achievements
   * Returns a simplified list of available Achievements.  This assumes that achievements have first been created using the web console. Otherwise no data is returned and the value of the \&quot;totalRecordsFound\&quot; variable in the metadata section of the response is 0.  GET responses can be filtered out based on the achievement parameters to narrow down the results.  &#x60;Requesting a list of Achievements a response will show Achievements that are in Live state and/or Expired.&#x60;   &#x60;Achievements that are in Draft state or Deprecated - will not be displayed.&#x60;   Include query parameter options are:  &#x60;?_include&#x3D;ruleSets&#x60; &#x60;?_include&#x3D;dependantOn&#x60; &#x60;?_include&#x3D;products&#x60; &#x60;?_include&#x3D;metadata&#x60; &#x60;?_include&#x3D;rewards&#x60;  or multiple at the same time: &#x60;?_include&#x3D;products,metadata,ruleSets,dependantOn,rewards&#x60;
   * @param X_API_KEY Your unique API key (required)
   * @param spaceName This is the space name which is linked to the account (required)
   * @param id The unique identifiers of the resources (optional
   * @param limit Used for pagination. Setting the limit value will cause the system to limit the number of records returned to the specified number. (optional)
   * @param skip Used for pagination. Setting the skip value will cause the system to return records from the specified position onwards.  EXAMPLE below returns the results for requested resource without skipping any records  &lt;url&gt;?_limit&#x3D;5&amp;_skip&#x3D;0  EXAMPLE below returns the results for requested resource after skipping the first 10 records  &#x60;&lt;url&gt;?_limit&#x3D;5&amp;_skip&#x3D;10&#x60; (optional)
   * @param sortByFields Enables sorting of results based on fields and order specified.  Supported ordering  &#x60;asc, desc&#x60;   Usage syntax  &#x60;_sortByFields&#x3D;&lt;field-to-sort-on&gt;:&lt;order&gt;&#x60;   EXAMPLE The query will return data sorted by transactionTimestamp in descending order  &#x60;&lt;url&gt;?_sortByFields&#x3D;transactionTimestamp:desc,created:asc&#x60; (optional)
   * @param include Allows you to add the products and metadata objects to the response. Case sensitive (optional)
   * @param lang Allows you to preview the label, description and terms and conditions of the competition in a requested language. Case sensitive (optional)
   * @param equal Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  Single equals sign usage has two types of applications in formulating API queries - * assigning values to predefined/reserved parameters like _skip, _limit, _lang, _sortByFields, _uomKey, _include * assigning values to model based parameters (Example name, transactionTimestamp, options.limitEntrantsTo etc.)  EXAMPLE below returns all competitions in \&quot;Ready\&quot; or \&quot;Active\&quot; state that have either a group1 or group2 entrant limitation  &#x60;&lt;url&gt;/competitions?_skip&#x3D;0&amp;_limit&#x3D;100&amp;status&#x3D;Ready,Active&amp;options.limitEntrantsTo&#x3D;group1,group2&#x60; (optional)
   * @param equalEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  Single equals sign usage has two types of applications in formulating API queries - * assigning values to predefined/reserved parameters like _skip, _limit, _lang, _sortByFields, _uomKey, _include * assigning values to model based parameters (Example name, transactionTimestamp, options.limitEntrantsTo etc.)  EXAMPLE below returns all competitions in \&quot;Ready\&quot; state only that have either a group1 or group2 entrant limitation  &#x60;&lt;url&gt;/competitions?_skip&#x3D;0&amp;_limit&#x3D;100&amp;status&#x3D;&#x3D;Ready&amp;options.limitEntrantsTo&#x3D;group1,group2&#x60; (optional)
   * @param lessThanEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The less than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or less than the specified field value.  EXAMPLE below returns all the data which was uploaded before 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&lt;&#x3D;2021-02-09T17:38:08.328&#x60; (optional)
   * @param lessThanEqualEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The less than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or less than the specified field value.  EXAMPLE below returns all the data which were uploaded before 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&lt;&#x3D;&#x3D;2021-02-09T17:38:08.328&#x60; (optional)
   * @param equalGreaterThan Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The greater than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or greater than the specified field value.  EXAMPLE below returns all the data which were uploaded after 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&#x3D;&gt;2021-02-09T17:38:08.328&#x60; (optional)
   * @param equalEqualGreaterThan Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The greater than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or greater than the specified field value.  EXAMPLE below returns all the data which were uploaded after 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&#x3D;&#x3D;&gt;2021-02-09T17:38:08.328&#x60; (optional)
   * @param deprecated Is the achievement active or deprecated  &#x60;?deprecated&#x3D;search_boolean&#x60; (optional)
   * @param achievementLiveStatus Is the achievement in Live or Draft status  Supported values:  &#x60;Live&#x60; &#x60;Draft&#x60;  &#x60;?achievementLiveStatus&#x3D;search_string&#x60; (optional)
   * @param initialState Is the hidden or visible   Supported Values:   &#x60;1&#x60; and &#x60;0&#x60;   &#x60;?initialState&#x3D;search_integer&#x60; (optional)
   * @return CompletableFuture&lt;ApiResponse&lt;AchievementResponse&gt;&gt;
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ApiResponse<AchievementResponse>> getAchievementsWithHttpInfo(String X_API_KEY, String spaceName, List<String> id, Integer limit, Integer skip, String sortByFields, String include, String lang, String equal, String equalEqual, String lessThanEqual, String lessThanEqualEqual, String equalGreaterThan, String equalEqualGreaterThan, Boolean deprecated, String achievementLiveStatus, Integer initialState) throws ApiException {
    try {
      HttpRequest.Builder localVarRequestBuilder = getAchievementsRequestBuilder(X_API_KEY, spaceName, id, limit, skip, sortByFields, include, lang, equal, equalEqual, lessThanEqual, lessThanEqualEqual, equalGreaterThan, equalEqualGreaterThan, deprecated, achievementLiveStatus, initialState);
      return memberVarHttpClient.sendAsync(
          localVarRequestBuilder.build(),
          HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
            if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(getApiException("getAchievements", localVarResponse));
            }
            try {
              return CompletableFuture.completedFuture(
                  new ApiResponse<AchievementResponse>(
                      localVarResponse.statusCode(),
                      localVarResponse.headers().map(),
                      memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<AchievementResponse>() {}))
              );
            } catch (IOException e) {
              return CompletableFuture.failedFuture(new ApiException(e));
            }
        }
      );
    }
    catch (ApiException e) {
      return CompletableFuture.failedFuture(e);
    }
  }

  private HttpRequest.Builder getAchievementsRequestBuilder(String X_API_KEY, String spaceName, List<String> id, Integer limit, Integer skip, String sortByFields, String include, String lang, String equal, String equalEqual, String lessThanEqual, String lessThanEqualEqual, String equalGreaterThan, String equalEqualGreaterThan, Boolean deprecated, String achievementLiveStatus, Integer initialState) throws ApiException {
    // verify the required parameter 'X_API_KEY' is set
    if (X_API_KEY == null) {
      throw new ApiException(400, "Missing the required parameter 'X_API_KEY' when calling getAchievements");
    }
    // verify the required parameter 'spaceName' is set
    if (spaceName == null) {
      throw new ApiException(400, "Missing the required parameter 'spaceName' when calling getAchievements");
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/{spaceName}/achievements"
        .replace("{spaceName}", ApiClient.urlEncode(spaceName.toString()));

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("multi", "id", id));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_limit", limit));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_skip", skip));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_sortByFields", sortByFields));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_include", include));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_lang", lang));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&#x3D;", equal));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&#x3D;&#x3D;", equalEqual));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&lt;&#x3D;", lessThanEqual));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&lt;&#x3D;&#x3D;", lessThanEqualEqual));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&#x3D;&gt;", equalGreaterThan));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&#x3D;&#x3D;&gt;", equalEqualGreaterThan));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("deprecated", deprecated));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("achievementLiveStatus", achievementLiveStatus));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("initialState", initialState));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    if (X_API_KEY != null) {
      localVarRequestBuilder.header("X-API-KEY", X_API_KEY.toString());
    }
    localVarRequestBuilder.header("Accept", "application/json");

    localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
    if (memberVarReadTimeout != null) {
      localVarRequestBuilder.timeout(memberVarReadTimeout);
    }
    if (memberVarInterceptor != null) {
      memberVarInterceptor.accept(localVarRequestBuilder);
    }
    return localVarRequestBuilder;
  }
  /**
   * Returns an achievement by id
   * Returns public facing achievement information for the specified achievement identifier. The response object can be expanded depending on the query include parameter.
   * @param X_API_KEY Your unique API key (required)
   * @param spaceName This is the space name which is linked to the account (required)
   * @param id Unique identifier of the resource (required)
   * @param include Allows you to add the products and metadata objects to the response. Case sensitive (optional)
   * @param lang Allows you to preview the label, description and terms and conditions of the competition in a requested language. Case sensitive (optional)
   * @return CompletableFuture&lt;AchievementByIdResponse&gt;
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<AchievementByIdResponse> getAchievementsById(String X_API_KEY, String spaceName, String id, String include, String lang) throws ApiException {
    try {
      HttpRequest.Builder localVarRequestBuilder = getAchievementsByIdRequestBuilder(X_API_KEY, spaceName, id, include, lang);
      return memberVarHttpClient.sendAsync(
          localVarRequestBuilder.build(),
          HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
            if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(getApiException("getAchievementsById", localVarResponse));
            }
            try {
              return CompletableFuture.completedFuture(
                  memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<AchievementByIdResponse>() {})
              );
            } catch (IOException e) {
              return CompletableFuture.failedFuture(new ApiException(e));
            }
      });
    }
    catch (ApiException e) {
      return CompletableFuture.failedFuture(e);
    }
  }

  /**
   * Returns an achievement by id
   * Returns public facing achievement information for the specified achievement identifier. The response object can be expanded depending on the query include parameter.
   * @param X_API_KEY Your unique API key (required)
   * @param spaceName This is the space name which is linked to the account (required)
   * @param id Unique identifier of the resource (required)
   * @param include Allows you to add the products and metadata objects to the response. Case sensitive (optional)
   * @param lang Allows you to preview the label, description and terms and conditions of the competition in a requested language. Case sensitive (optional)
   * @return CompletableFuture&lt;ApiResponse&lt;AchievementByIdResponse&gt;&gt;
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ApiResponse<AchievementByIdResponse>> getAchievementsByIdWithHttpInfo(String X_API_KEY, String spaceName, String id, String include, String lang) throws ApiException {
    try {
      HttpRequest.Builder localVarRequestBuilder = getAchievementsByIdRequestBuilder(X_API_KEY, spaceName, id, include, lang);
      return memberVarHttpClient.sendAsync(
          localVarRequestBuilder.build(),
          HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
            if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(getApiException("getAchievementsById", localVarResponse));
            }
            try {
              return CompletableFuture.completedFuture(
                  new ApiResponse<AchievementByIdResponse>(
                      localVarResponse.statusCode(),
                      localVarResponse.headers().map(),
                      memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<AchievementByIdResponse>() {}))
              );
            } catch (IOException e) {
              return CompletableFuture.failedFuture(new ApiException(e));
            }
        }
      );
    }
    catch (ApiException e) {
      return CompletableFuture.failedFuture(e);
    }
  }

  private HttpRequest.Builder getAchievementsByIdRequestBuilder(String X_API_KEY, String spaceName, String id, String include, String lang) throws ApiException {
    // verify the required parameter 'X_API_KEY' is set
    if (X_API_KEY == null) {
      throw new ApiException(400, "Missing the required parameter 'X_API_KEY' when calling getAchievementsById");
    }
    // verify the required parameter 'spaceName' is set
    if (spaceName == null) {
      throw new ApiException(400, "Missing the required parameter 'spaceName' when calling getAchievementsById");
    }
    // verify the required parameter 'id' is set
    if (id == null) {
      throw new ApiException(400, "Missing the required parameter 'id' when calling getAchievementsById");
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/{spaceName}/achievements/{id}"
        .replace("{spaceName}", ApiClient.urlEncode(spaceName.toString()))
        .replace("{id}", ApiClient.urlEncode(id.toString()));

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_include", include));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_lang", lang));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    if (X_API_KEY != null) {
      localVarRequestBuilder.header("X-API-KEY", X_API_KEY.toString());
    }
    localVarRequestBuilder.header("Accept", "application/json");

    localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
    if (memberVarReadTimeout != null) {
      localVarRequestBuilder.timeout(memberVarReadTimeout);
    }
    if (memberVarInterceptor != null) {
      memberVarInterceptor.accept(localVarRequestBuilder);
    }
    return localVarRequestBuilder;
  }
  /**
   * Returns a list of achievements for a specific member
   * Returns a simplified list of available Achievements.  This assumes that achievements have first been created using the web console. Otherwise no data is returned and the value of the \&quot;totalRecordsFound\&quot; variable in the metadata section of the response is 0.  GET responses can be filtered out based on the achievement parameters to narrow down the results.  &#x60;Requesting a list of Achievements a response will show Achievements that are in Live state and/or Expired.&#x60;   &#x60;Achievements that are in Draft state or Deprecated - will not be displayed.&#x60;   Include query parameter options are:  &#x60;?_include&#x3D;ruleSets&#x60; &#x60;?_include&#x3D;dependantOn&#x60; &#x60;?_include&#x3D;products&#x60; &#x60;?_include&#x3D;metadata&#x60; &#x60;?_include&#x3D;rewards&#x60;  or multiple at the same time: &#x60;?_include&#x3D;products,metadata,ruleSets,dependantOn,rewards&#x60;
   * @param X_API_KEY Your unique API key (required)
   * @param spaceName This is the space name which is linked to the account (required)
   * @param memberId Id of a Member (required)
   * @param limit Used for pagination. Setting the limit value will cause the system to limit the number of records returned to the specified number. (optional)
   * @param skip Used for pagination. Setting the skip value will cause the system to return records from the specified position onwards.  EXAMPLE below returns the results for requested resource without skipping any records  &lt;url&gt;?_limit&#x3D;5&amp;_skip&#x3D;0  EXAMPLE below returns the results for requested resource after skipping the first 10 records  &#x60;&lt;url&gt;?_limit&#x3D;5&amp;_skip&#x3D;10&#x60; (optional)
   * @param sortByFields Enables sorting of results based on fields and order specified.  Supported ordering  &#x60;asc, desc&#x60;   Usage syntax  &#x60;_sortByFields&#x3D;&lt;field-to-sort-on&gt;:&lt;order&gt;&#x60;   EXAMPLE The query will return data sorted by transactionTimestamp in descending order  &#x60;&lt;url&gt;?_sortByFields&#x3D;transactionTimestamp:desc,created:asc&#x60; (optional)
   * @param include Allows you to add the products and metadata objects to the response. Case sensitive (optional)
   * @param lang Allows you to preview the label, description and terms and conditions of the competition in a requested language. Case sensitive (optional)
   * @param equal Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  Single equals sign usage has two types of applications in formulating API queries - * assigning values to predefined/reserved parameters like _skip, _limit, _lang, _sortByFields, _uomKey, _include * assigning values to model based parameters (Example name, transactionTimestamp, options.limitEntrantsTo etc.)  EXAMPLE below returns all competitions in \&quot;Ready\&quot; or \&quot;Active\&quot; state that have either a group1 or group2 entrant limitation  &#x60;&lt;url&gt;/competitions?_skip&#x3D;0&amp;_limit&#x3D;100&amp;status&#x3D;Ready,Active&amp;options.limitEntrantsTo&#x3D;group1,group2&#x60; (optional)
   * @param equalEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  Single equals sign usage has two types of applications in formulating API queries - * assigning values to predefined/reserved parameters like _skip, _limit, _lang, _sortByFields, _uomKey, _include * assigning values to model based parameters (Example name, transactionTimestamp, options.limitEntrantsTo etc.)  EXAMPLE below returns all competitions in \&quot;Ready\&quot; state only that have either a group1 or group2 entrant limitation  &#x60;&lt;url&gt;/competitions?_skip&#x3D;0&amp;_limit&#x3D;100&amp;status&#x3D;&#x3D;Ready&amp;options.limitEntrantsTo&#x3D;group1,group2&#x60; (optional)
   * @param lessThanEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The less than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or less than the specified field value.  EXAMPLE below returns all the data which was uploaded before 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&lt;&#x3D;2021-02-09T17:38:08.328&#x60; (optional)
   * @param lessThanEqualEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The less than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or less than the specified field value.  EXAMPLE below returns all the data which were uploaded before 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&lt;&#x3D;&#x3D;2021-02-09T17:38:08.328&#x60; (optional)
   * @param equalGreaterThan Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The greater than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or greater than the specified field value.  EXAMPLE below returns all the data which were uploaded after 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&#x3D;&gt;2021-02-09T17:38:08.328&#x60; (optional)
   * @param equalEqualGreaterThan Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The greater than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or greater than the specified field value.  EXAMPLE below returns all the data which were uploaded after 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&#x3D;&#x3D;&gt;2021-02-09T17:38:08.328&#x60; (optional)
   * @param deprecated Is the achievement active or deprecated  &#x60;?deprecated&#x3D;search_boolean&#x60; (optional)
   * @param achievementLiveStatus Is the achievement in Live or Draft status  Supported values:  &#x60;Live&#x60; &#x60;Draft&#x60;  &#x60;?achievementLiveStatus&#x3D;search_string&#x60; (optional)
   * @param initialState Is the hidden or visible   Supported Values:   &#x60;1&#x60; and &#x60;0&#x60;   &#x60;?initialState&#x3D;search_integer&#x60; (optional)
   * @return CompletableFuture&lt;AchievementResponse&gt;
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<AchievementResponse> getMemberAchievements(String X_API_KEY, String spaceName, String memberId, Integer limit, Integer skip, String sortByFields, String include, String lang, String equal, String equalEqual, String lessThanEqual, String lessThanEqualEqual, String equalGreaterThan, String equalEqualGreaterThan, Boolean deprecated, String achievementLiveStatus, Integer initialState) throws ApiException {
    try {
      HttpRequest.Builder localVarRequestBuilder = getMemberAchievementsRequestBuilder(X_API_KEY, spaceName, memberId, limit, skip, sortByFields, include, lang, equal, equalEqual, lessThanEqual, lessThanEqualEqual, equalGreaterThan, equalEqualGreaterThan, deprecated, achievementLiveStatus, initialState);
      return memberVarHttpClient.sendAsync(
          localVarRequestBuilder.build(),
          HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
            if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(getApiException("getMemberAchievements", localVarResponse));
            }
            try {
              return CompletableFuture.completedFuture(
                  memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<AchievementResponse>() {})
              );
            } catch (IOException e) {
              return CompletableFuture.failedFuture(new ApiException(e));
            }
      });
    }
    catch (ApiException e) {
      return CompletableFuture.failedFuture(e);
    }
  }

  /**
   * Returns a list of achievements for a specific member
   * Returns a simplified list of available Achievements.  This assumes that achievements have first been created using the web console. Otherwise no data is returned and the value of the \&quot;totalRecordsFound\&quot; variable in the metadata section of the response is 0.  GET responses can be filtered out based on the achievement parameters to narrow down the results.  &#x60;Requesting a list of Achievements a response will show Achievements that are in Live state and/or Expired.&#x60;   &#x60;Achievements that are in Draft state or Deprecated - will not be displayed.&#x60;   Include query parameter options are:  &#x60;?_include&#x3D;ruleSets&#x60; &#x60;?_include&#x3D;dependantOn&#x60; &#x60;?_include&#x3D;products&#x60; &#x60;?_include&#x3D;metadata&#x60; &#x60;?_include&#x3D;rewards&#x60;  or multiple at the same time: &#x60;?_include&#x3D;products,metadata,ruleSets,dependantOn,rewards&#x60;
   * @param X_API_KEY Your unique API key (required)
   * @param spaceName This is the space name which is linked to the account (required)
   * @param memberId Id of a Member (required)
   * @param limit Used for pagination. Setting the limit value will cause the system to limit the number of records returned to the specified number. (optional)
   * @param skip Used for pagination. Setting the skip value will cause the system to return records from the specified position onwards.  EXAMPLE below returns the results for requested resource without skipping any records  &lt;url&gt;?_limit&#x3D;5&amp;_skip&#x3D;0  EXAMPLE below returns the results for requested resource after skipping the first 10 records  &#x60;&lt;url&gt;?_limit&#x3D;5&amp;_skip&#x3D;10&#x60; (optional)
   * @param sortByFields Enables sorting of results based on fields and order specified.  Supported ordering  &#x60;asc, desc&#x60;   Usage syntax  &#x60;_sortByFields&#x3D;&lt;field-to-sort-on&gt;:&lt;order&gt;&#x60;   EXAMPLE The query will return data sorted by transactionTimestamp in descending order  &#x60;&lt;url&gt;?_sortByFields&#x3D;transactionTimestamp:desc,created:asc&#x60; (optional)
   * @param include Allows you to add the products and metadata objects to the response. Case sensitive (optional)
   * @param lang Allows you to preview the label, description and terms and conditions of the competition in a requested language. Case sensitive (optional)
   * @param equal Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  Single equals sign usage has two types of applications in formulating API queries - * assigning values to predefined/reserved parameters like _skip, _limit, _lang, _sortByFields, _uomKey, _include * assigning values to model based parameters (Example name, transactionTimestamp, options.limitEntrantsTo etc.)  EXAMPLE below returns all competitions in \&quot;Ready\&quot; or \&quot;Active\&quot; state that have either a group1 or group2 entrant limitation  &#x60;&lt;url&gt;/competitions?_skip&#x3D;0&amp;_limit&#x3D;100&amp;status&#x3D;Ready,Active&amp;options.limitEntrantsTo&#x3D;group1,group2&#x60; (optional)
   * @param equalEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  Single equals sign usage has two types of applications in formulating API queries - * assigning values to predefined/reserved parameters like _skip, _limit, _lang, _sortByFields, _uomKey, _include * assigning values to model based parameters (Example name, transactionTimestamp, options.limitEntrantsTo etc.)  EXAMPLE below returns all competitions in \&quot;Ready\&quot; state only that have either a group1 or group2 entrant limitation  &#x60;&lt;url&gt;/competitions?_skip&#x3D;0&amp;_limit&#x3D;100&amp;status&#x3D;&#x3D;Ready&amp;options.limitEntrantsTo&#x3D;group1,group2&#x60; (optional)
   * @param lessThanEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The less than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or less than the specified field value.  EXAMPLE below returns all the data which was uploaded before 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&lt;&#x3D;2021-02-09T17:38:08.328&#x60; (optional)
   * @param lessThanEqualEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The less than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or less than the specified field value.  EXAMPLE below returns all the data which were uploaded before 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&lt;&#x3D;&#x3D;2021-02-09T17:38:08.328&#x60; (optional)
   * @param equalGreaterThan Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The greater than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or greater than the specified field value.  EXAMPLE below returns all the data which were uploaded after 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&#x3D;&gt;2021-02-09T17:38:08.328&#x60; (optional)
   * @param equalEqualGreaterThan Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The greater than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or greater than the specified field value.  EXAMPLE below returns all the data which were uploaded after 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&#x3D;&#x3D;&gt;2021-02-09T17:38:08.328&#x60; (optional)
   * @param deprecated Is the achievement active or deprecated  &#x60;?deprecated&#x3D;search_boolean&#x60; (optional)
   * @param achievementLiveStatus Is the achievement in Live or Draft status  Supported values:  &#x60;Live&#x60; &#x60;Draft&#x60;  &#x60;?achievementLiveStatus&#x3D;search_string&#x60; (optional)
   * @param initialState Is the hidden or visible   Supported Values:   &#x60;1&#x60; and &#x60;0&#x60;   &#x60;?initialState&#x3D;search_integer&#x60; (optional)
   * @return CompletableFuture&lt;ApiResponse&lt;AchievementResponse&gt;&gt;
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ApiResponse<AchievementResponse>> getMemberAchievementsWithHttpInfo(String X_API_KEY, String spaceName, String memberId, Integer limit, Integer skip, String sortByFields, String include, String lang, String equal, String equalEqual, String lessThanEqual, String lessThanEqualEqual, String equalGreaterThan, String equalEqualGreaterThan, Boolean deprecated, String achievementLiveStatus, Integer initialState) throws ApiException {
    try {
      HttpRequest.Builder localVarRequestBuilder = getMemberAchievementsRequestBuilder(X_API_KEY, spaceName, memberId, limit, skip, sortByFields, include, lang, equal, equalEqual, lessThanEqual, lessThanEqualEqual, equalGreaterThan, equalEqualGreaterThan, deprecated, achievementLiveStatus, initialState);
      return memberVarHttpClient.sendAsync(
          localVarRequestBuilder.build(),
          HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
            if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(getApiException("getMemberAchievements", localVarResponse));
            }
            try {
              return CompletableFuture.completedFuture(
                  new ApiResponse<AchievementResponse>(
                      localVarResponse.statusCode(),
                      localVarResponse.headers().map(),
                      memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<AchievementResponse>() {}))
              );
            } catch (IOException e) {
              return CompletableFuture.failedFuture(new ApiException(e));
            }
        }
      );
    }
    catch (ApiException e) {
      return CompletableFuture.failedFuture(e);
    }
  }

  private HttpRequest.Builder getMemberAchievementsRequestBuilder(String X_API_KEY, String spaceName, String memberId, Integer limit, Integer skip, String sortByFields, String include, String lang, String equal, String equalEqual, String lessThanEqual, String lessThanEqualEqual, String equalGreaterThan, String equalEqualGreaterThan, Boolean deprecated, String achievementLiveStatus, Integer initialState) throws ApiException {
    // verify the required parameter 'X_API_KEY' is set
    if (X_API_KEY == null) {
      throw new ApiException(400, "Missing the required parameter 'X_API_KEY' when calling getMemberAchievements");
    }
    // verify the required parameter 'spaceName' is set
    if (spaceName == null) {
      throw new ApiException(400, "Missing the required parameter 'spaceName' when calling getMemberAchievements");
    }
    // verify the required parameter 'memberId' is set
    if (memberId == null) {
      throw new ApiException(400, "Missing the required parameter 'memberId' when calling getMemberAchievements");
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/{spaceName}/achievements/members/{memberId}"
        .replace("{spaceName}", ApiClient.urlEncode(spaceName.toString()))
        .replace("{memberId}", ApiClient.urlEncode(memberId.toString()));

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_limit", limit));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_skip", skip));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_sortByFields", sortByFields));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_include", include));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_lang", lang));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&#x3D;", equal));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&#x3D;&#x3D;", equalEqual));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&lt;&#x3D;", lessThanEqual));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&lt;&#x3D;&#x3D;", lessThanEqualEqual));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&#x3D;&gt;", equalGreaterThan));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&#x3D;&#x3D;&gt;", equalEqualGreaterThan));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("deprecated", deprecated));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("achievementLiveStatus", achievementLiveStatus));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("initialState", initialState));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    if (X_API_KEY != null) {
      localVarRequestBuilder.header("X-API-KEY", X_API_KEY.toString());
    }
    localVarRequestBuilder.header("Accept", "application/json");

    localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
    if (memberVarReadTimeout != null) {
      localVarRequestBuilder.timeout(memberVarReadTimeout);
    }
    if (memberVarInterceptor != null) {
      memberVarInterceptor.accept(localVarRequestBuilder);
    }
    return localVarRequestBuilder;
  }
  /**
   * Returns a list of achievements by member ref id
   * Returns a simplified list of available Achievements.  This assumes that achievements have first been created using the web console. Otherwise no data is returned and the value of the \&quot;totalRecordsFound\&quot; variable in the metadata section of the response is 0.  GET responses can be filtered out based on the achievement parameters to narrow down the results.  &#x60;Requesting a list of Achievements a response will show Achievements that are in Live state and/or Expired.&#x60;   &#x60;Achievements that are in Draft state or Deprecated - will not be displayed.&#x60;   Include query parameter options are:  &#x60;?_include&#x3D;ruleSets&#x60; &#x60;?_include&#x3D;dependantOn&#x60; &#x60;?_include&#x3D;products&#x60; &#x60;?_include&#x3D;metadata&#x60; &#x60;?_include&#x3D;rewards&#x60;  or multiple at the same time: &#x60;?_include&#x3D;products,metadata,ruleSets,dependantOn,rewards&#x60;
   * @param X_API_KEY Your unique API key (required)
   * @param spaceName This is the space name which is linked to the account (required)
   * @param memberRefId Reference Id of a Member (required)
   * @param limit Used for pagination. Setting the limit value will cause the system to limit the number of records returned to the specified number. (optional)
   * @param skip Used for pagination. Setting the skip value will cause the system to return records from the specified position onwards.  EXAMPLE below returns the results for requested resource without skipping any records  &lt;url&gt;?_limit&#x3D;5&amp;_skip&#x3D;0  EXAMPLE below returns the results for requested resource after skipping the first 10 records  &#x60;&lt;url&gt;?_limit&#x3D;5&amp;_skip&#x3D;10&#x60; (optional)
   * @param sortByFields Enables sorting of results based on fields and order specified.  Supported ordering  &#x60;asc, desc&#x60;   Usage syntax  &#x60;_sortByFields&#x3D;&lt;field-to-sort-on&gt;:&lt;order&gt;&#x60;   EXAMPLE The query will return data sorted by transactionTimestamp in descending order  &#x60;&lt;url&gt;?_sortByFields&#x3D;transactionTimestamp:desc,created:asc&#x60; (optional)
   * @param include Allows you to add the products and metadata objects to the response. Case sensitive (optional)
   * @param lang Allows you to preview the label, description and terms and conditions of the competition in a requested language. Case sensitive (optional)
   * @param equal Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  Single equals sign usage has two types of applications in formulating API queries - * assigning values to predefined/reserved parameters like _skip, _limit, _lang, _sortByFields, _uomKey, _include * assigning values to model based parameters (Example name, transactionTimestamp, options.limitEntrantsTo etc.)  EXAMPLE below returns all competitions in \&quot;Ready\&quot; or \&quot;Active\&quot; state that have either a group1 or group2 entrant limitation  &#x60;&lt;url&gt;/competitions?_skip&#x3D;0&amp;_limit&#x3D;100&amp;status&#x3D;Ready,Active&amp;options.limitEntrantsTo&#x3D;group1,group2&#x60; (optional)
   * @param equalEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  Single equals sign usage has two types of applications in formulating API queries - * assigning values to predefined/reserved parameters like _skip, _limit, _lang, _sortByFields, _uomKey, _include * assigning values to model based parameters (Example name, transactionTimestamp, options.limitEntrantsTo etc.)  EXAMPLE below returns all competitions in \&quot;Ready\&quot; state only that have either a group1 or group2 entrant limitation  &#x60;&lt;url&gt;/competitions?_skip&#x3D;0&amp;_limit&#x3D;100&amp;status&#x3D;&#x3D;Ready&amp;options.limitEntrantsTo&#x3D;group1,group2&#x60; (optional)
   * @param lessThanEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The less than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or less than the specified field value.  EXAMPLE below returns all the data which was uploaded before 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&lt;&#x3D;2021-02-09T17:38:08.328&#x60; (optional)
   * @param lessThanEqualEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The less than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or less than the specified field value.  EXAMPLE below returns all the data which were uploaded before 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&lt;&#x3D;&#x3D;2021-02-09T17:38:08.328&#x60; (optional)
   * @param equalGreaterThan Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The greater than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or greater than the specified field value.  EXAMPLE below returns all the data which were uploaded after 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&#x3D;&gt;2021-02-09T17:38:08.328&#x60; (optional)
   * @param equalEqualGreaterThan Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The greater than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or greater than the specified field value.  EXAMPLE below returns all the data which were uploaded after 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&#x3D;&#x3D;&gt;2021-02-09T17:38:08.328&#x60; (optional)
   * @param deprecated Is the achievement active or deprecated  &#x60;?deprecated&#x3D;search_boolean&#x60; (optional)
   * @param achievementLiveStatus Is the achievement in Live or Draft status  Supported values:  &#x60;Live&#x60; &#x60;Draft&#x60;  &#x60;?achievementLiveStatus&#x3D;search_string&#x60; (optional)
   * @param initialState Is the hidden or visible   Supported Values:   &#x60;1&#x60; and &#x60;0&#x60;   &#x60;?initialState&#x3D;search_integer&#x60; (optional)
   * @return CompletableFuture&lt;AchievementResponse&gt;
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<AchievementResponse> getMemberAchievementsByRefId(String X_API_KEY, String spaceName, String memberRefId, Integer limit, Integer skip, String sortByFields, String include, String lang, String equal, String equalEqual, String lessThanEqual, String lessThanEqualEqual, String equalGreaterThan, String equalEqualGreaterThan, Boolean deprecated, String achievementLiveStatus, Integer initialState) throws ApiException {
    try {
      HttpRequest.Builder localVarRequestBuilder = getMemberAchievementsByRefIdRequestBuilder(X_API_KEY, spaceName, memberRefId, limit, skip, sortByFields, include, lang, equal, equalEqual, lessThanEqual, lessThanEqualEqual, equalGreaterThan, equalEqualGreaterThan, deprecated, achievementLiveStatus, initialState);
      return memberVarHttpClient.sendAsync(
          localVarRequestBuilder.build(),
          HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
            if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(getApiException("getMemberAchievementsByRefId", localVarResponse));
            }
            try {
              return CompletableFuture.completedFuture(
                  memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<AchievementResponse>() {})
              );
            } catch (IOException e) {
              return CompletableFuture.failedFuture(new ApiException(e));
            }
      });
    }
    catch (ApiException e) {
      return CompletableFuture.failedFuture(e);
    }
  }

  /**
   * Returns a list of achievements by member ref id
   * Returns a simplified list of available Achievements.  This assumes that achievements have first been created using the web console. Otherwise no data is returned and the value of the \&quot;totalRecordsFound\&quot; variable in the metadata section of the response is 0.  GET responses can be filtered out based on the achievement parameters to narrow down the results.  &#x60;Requesting a list of Achievements a response will show Achievements that are in Live state and/or Expired.&#x60;   &#x60;Achievements that are in Draft state or Deprecated - will not be displayed.&#x60;   Include query parameter options are:  &#x60;?_include&#x3D;ruleSets&#x60; &#x60;?_include&#x3D;dependantOn&#x60; &#x60;?_include&#x3D;products&#x60; &#x60;?_include&#x3D;metadata&#x60; &#x60;?_include&#x3D;rewards&#x60;  or multiple at the same time: &#x60;?_include&#x3D;products,metadata,ruleSets,dependantOn,rewards&#x60;
   * @param X_API_KEY Your unique API key (required)
   * @param spaceName This is the space name which is linked to the account (required)
   * @param memberRefId Reference Id of a Member (required)
   * @param limit Used for pagination. Setting the limit value will cause the system to limit the number of records returned to the specified number. (optional)
   * @param skip Used for pagination. Setting the skip value will cause the system to return records from the specified position onwards.  EXAMPLE below returns the results for requested resource without skipping any records  &lt;url&gt;?_limit&#x3D;5&amp;_skip&#x3D;0  EXAMPLE below returns the results for requested resource after skipping the first 10 records  &#x60;&lt;url&gt;?_limit&#x3D;5&amp;_skip&#x3D;10&#x60; (optional)
   * @param sortByFields Enables sorting of results based on fields and order specified.  Supported ordering  &#x60;asc, desc&#x60;   Usage syntax  &#x60;_sortByFields&#x3D;&lt;field-to-sort-on&gt;:&lt;order&gt;&#x60;   EXAMPLE The query will return data sorted by transactionTimestamp in descending order  &#x60;&lt;url&gt;?_sortByFields&#x3D;transactionTimestamp:desc,created:asc&#x60; (optional)
   * @param include Allows you to add the products and metadata objects to the response. Case sensitive (optional)
   * @param lang Allows you to preview the label, description and terms and conditions of the competition in a requested language. Case sensitive (optional)
   * @param equal Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  Single equals sign usage has two types of applications in formulating API queries - * assigning values to predefined/reserved parameters like _skip, _limit, _lang, _sortByFields, _uomKey, _include * assigning values to model based parameters (Example name, transactionTimestamp, options.limitEntrantsTo etc.)  EXAMPLE below returns all competitions in \&quot;Ready\&quot; or \&quot;Active\&quot; state that have either a group1 or group2 entrant limitation  &#x60;&lt;url&gt;/competitions?_skip&#x3D;0&amp;_limit&#x3D;100&amp;status&#x3D;Ready,Active&amp;options.limitEntrantsTo&#x3D;group1,group2&#x60; (optional)
   * @param equalEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  Single equals sign usage has two types of applications in formulating API queries - * assigning values to predefined/reserved parameters like _skip, _limit, _lang, _sortByFields, _uomKey, _include * assigning values to model based parameters (Example name, transactionTimestamp, options.limitEntrantsTo etc.)  EXAMPLE below returns all competitions in \&quot;Ready\&quot; state only that have either a group1 or group2 entrant limitation  &#x60;&lt;url&gt;/competitions?_skip&#x3D;0&amp;_limit&#x3D;100&amp;status&#x3D;&#x3D;Ready&amp;options.limitEntrantsTo&#x3D;group1,group2&#x60; (optional)
   * @param lessThanEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The less than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or less than the specified field value.  EXAMPLE below returns all the data which was uploaded before 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&lt;&#x3D;2021-02-09T17:38:08.328&#x60; (optional)
   * @param lessThanEqualEqual Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The less than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or less than the specified field value.  EXAMPLE below returns all the data which were uploaded before 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&lt;&#x3D;&#x3D;2021-02-09T17:38:08.328&#x60; (optional)
   * @param equalGreaterThan Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The greater than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or greater than the specified field value.  EXAMPLE below returns all the data which were uploaded after 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&#x3D;&gt;2021-02-09T17:38:08.328&#x60; (optional)
   * @param equalEqualGreaterThan Single &#x60;&#x3D;&#x60; sign usage will work as a &#x60;should/OR&#x60; action and &#x60;&#x3D;&#x3D;&#x60; will work as a &#x60;must/AND&#x60; action  The greater than equal filter can be used on fields with a data type of integer, long, double, float, date, time or date-time. The filter will return all matching records that are equal to or greater than the specified field value.  EXAMPLE below returns all the data which were uploaded after 17:38 9th of February 2021 (defaults to 20 results).  &#x60;&lt;url&gt;events?transactionTimestamp&#x3D;&#x3D;&gt;2021-02-09T17:38:08.328&#x60; (optional)
   * @param deprecated Is the achievement active or deprecated  &#x60;?deprecated&#x3D;search_boolean&#x60; (optional)
   * @param achievementLiveStatus Is the achievement in Live or Draft status  Supported values:  &#x60;Live&#x60; &#x60;Draft&#x60;  &#x60;?achievementLiveStatus&#x3D;search_string&#x60; (optional)
   * @param initialState Is the hidden or visible   Supported Values:   &#x60;1&#x60; and &#x60;0&#x60;   &#x60;?initialState&#x3D;search_integer&#x60; (optional)
   * @return CompletableFuture&lt;ApiResponse&lt;AchievementResponse&gt;&gt;
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ApiResponse<AchievementResponse>> getMemberAchievementsByRefIdWithHttpInfo(String X_API_KEY, String spaceName, String memberRefId, Integer limit, Integer skip, String sortByFields, String include, String lang, String equal, String equalEqual, String lessThanEqual, String lessThanEqualEqual, String equalGreaterThan, String equalEqualGreaterThan, Boolean deprecated, String achievementLiveStatus, Integer initialState) throws ApiException {
    try {
      HttpRequest.Builder localVarRequestBuilder = getMemberAchievementsByRefIdRequestBuilder(X_API_KEY, spaceName, memberRefId, limit, skip, sortByFields, include, lang, equal, equalEqual, lessThanEqual, lessThanEqualEqual, equalGreaterThan, equalEqualGreaterThan, deprecated, achievementLiveStatus, initialState);
      return memberVarHttpClient.sendAsync(
          localVarRequestBuilder.build(),
          HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
            if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(getApiException("getMemberAchievementsByRefId", localVarResponse));
            }
            try {
              return CompletableFuture.completedFuture(
                  new ApiResponse<AchievementResponse>(
                      localVarResponse.statusCode(),
                      localVarResponse.headers().map(),
                      memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<AchievementResponse>() {}))
              );
            } catch (IOException e) {
              return CompletableFuture.failedFuture(new ApiException(e));
            }
        }
      );
    }
    catch (ApiException e) {
      return CompletableFuture.failedFuture(e);
    }
  }

  private HttpRequest.Builder getMemberAchievementsByRefIdRequestBuilder(String X_API_KEY, String spaceName, String memberRefId, Integer limit, Integer skip, String sortByFields, String include, String lang, String equal, String equalEqual, String lessThanEqual, String lessThanEqualEqual, String equalGreaterThan, String equalEqualGreaterThan, Boolean deprecated, String achievementLiveStatus, Integer initialState) throws ApiException {
    // verify the required parameter 'X_API_KEY' is set
    if (X_API_KEY == null) {
      throw new ApiException(400, "Missing the required parameter 'X_API_KEY' when calling getMemberAchievementsByRefId");
    }
    // verify the required parameter 'spaceName' is set
    if (spaceName == null) {
      throw new ApiException(400, "Missing the required parameter 'spaceName' when calling getMemberAchievementsByRefId");
    }
    // verify the required parameter 'memberRefId' is set
    if (memberRefId == null) {
      throw new ApiException(400, "Missing the required parameter 'memberRefId' when calling getMemberAchievementsByRefId");
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/{spaceName}/achievements/members/reference/{memberRefId}"
        .replace("{spaceName}", ApiClient.urlEncode(spaceName.toString()))
        .replace("{memberRefId}", ApiClient.urlEncode(memberRefId.toString()));

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_limit", limit));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_skip", skip));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_sortByFields", sortByFields));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_include", include));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("_lang", lang));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&#x3D;", equal));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&#x3D;&#x3D;", equalEqual));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&lt;&#x3D;", lessThanEqual));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&lt;&#x3D;&#x3D;", lessThanEqualEqual));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&#x3D;&gt;", equalGreaterThan));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("&#x3D;&#x3D;&gt;", equalEqualGreaterThan));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("deprecated", deprecated));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("achievementLiveStatus", achievementLiveStatus));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("initialState", initialState));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    if (X_API_KEY != null) {
      localVarRequestBuilder.header("X-API-KEY", X_API_KEY.toString());
    }
    localVarRequestBuilder.header("Accept", "application/json");

    localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
    if (memberVarReadTimeout != null) {
      localVarRequestBuilder.timeout(memberVarReadTimeout);
    }
    if (memberVarInterceptor != null) {
      memberVarInterceptor.accept(localVarRequestBuilder);
    }
    return localVarRequestBuilder;
  }
}
