/*
 * Copyright (c) 2022. ZIQNI LTD registered in England and Wales, company registration number-09693684
 */

/*
 * Ziqni Gateway Services
 * These are the Gateway services to be used by customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.gateway.client.api;

import com.ziqni.gateway.client.ApiException;
import com.ziqni.gateway.client.api.AchievementsApi;
import com.ziqni.gateway.client.model.AchievementByIdResponse;
import com.ziqni.gateway.client.model.AchievementResponse;
import com.ziqni.gateway.client.model.ApiErrorResponse;
import com.ziqni.gateway.client.model.Error;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import java.util.concurrent.CompletableFuture;
import org.junit.jupiter.api.*;

/**
 * API tests for AchievementsApi
 */
public class AchievementsApiTest {

    private final AchievementsApi api = new AchievementsApi();

    
    /**
     * Returns a list of achievements
     *
     * Returns a simplified list of available Achievements.  This assumes that achievements have first been created using the web console. Otherwise no data is returned and the value of the \&quot;totalRecordsFound\&quot; variable in the metadata section of the response is 0.  GET responses can be filtered out based on the achievement parameters to narrow down the results.  &#x60;Requesting a list of Achievements a response will show Achievements that are in Live state and/or Expired.&#x60;   &#x60;Achievements that are in Draft state or Deprecated - will not be displayed.&#x60;   Include query parameter options are:  &#x60;?_include&#x3D;ruleSets&#x60; &#x60;?_include&#x3D;dependantOn&#x60; &#x60;?_include&#x3D;products&#x60; &#x60;?_include&#x3D;metadata&#x60; &#x60;?_include&#x3D;rewards&#x60;  or multiple at the same time: &#x60;?_include&#x3D;products,metadata,ruleSets,dependantOn,rewards&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAchievementsTest() throws ApiException {
        String X_API_KEY = null;
        String spaceName = null;
        List<String> id = null;
        Integer limit = null;
        Integer skip = null;
        String sortByFields = null;
        String include = null;
        String lang = null;
        String equal = null;
        String equalEqual = null;
        String lessThanEqual = null;
        String lessThanEqualEqual = null;
        String equalGreaterThan = null;
        String equalEqualGreaterThan = null;
        Boolean deprecated = null;
        String achievementLiveStatus = null;
        Integer initialState = null;
        CompletableFuture<AchievementResponse> response = 
        api.getAchievements(X_API_KEY, spaceName, id, limit, skip, sortByFields, include, lang, equal, equalEqual, lessThanEqual, lessThanEqualEqual, equalGreaterThan, equalEqualGreaterThan, deprecated, achievementLiveStatus, initialState);
        
        // TODO: test validations
    }
    
    /**
     * Returns an achievement by id
     *
     * Returns public facing achievement information for the specified achievement identifier. The response object can be expanded depending on the query include parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAchievementsByIdTest() throws ApiException {
        String X_API_KEY = null;
        String spaceName = null;
        String id = null;
        String include = null;
        String lang = null;
        CompletableFuture<AchievementByIdResponse> response = 
        api.getAchievementsById(X_API_KEY, spaceName, id, include, lang);
        
        // TODO: test validations
    }
    
    /**
     * Returns a list of achievements for a specific member
     *
     * Returns a simplified list of available Achievements.  This assumes that achievements have first been created using the web console. Otherwise no data is returned and the value of the \&quot;totalRecordsFound\&quot; variable in the metadata section of the response is 0.  GET responses can be filtered out based on the achievement parameters to narrow down the results.  &#x60;Requesting a list of Achievements a response will show Achievements that are in Live state and/or Expired.&#x60;   &#x60;Achievements that are in Draft state or Deprecated - will not be displayed.&#x60;   Include query parameter options are:  &#x60;?_include&#x3D;ruleSets&#x60; &#x60;?_include&#x3D;dependantOn&#x60; &#x60;?_include&#x3D;products&#x60; &#x60;?_include&#x3D;metadata&#x60; &#x60;?_include&#x3D;rewards&#x60;  or multiple at the same time: &#x60;?_include&#x3D;products,metadata,ruleSets,dependantOn,rewards&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMemberAchievementsTest() throws ApiException {
        String X_API_KEY = null;
        String spaceName = null;
        String memberId = null;
        Integer limit = null;
        Integer skip = null;
        String sortByFields = null;
        String include = null;
        String lang = null;
        String equal = null;
        String equalEqual = null;
        String lessThanEqual = null;
        String lessThanEqualEqual = null;
        String equalGreaterThan = null;
        String equalEqualGreaterThan = null;
        Boolean deprecated = null;
        String achievementLiveStatus = null;
        Integer initialState = null;
        CompletableFuture<AchievementResponse> response = 
        api.getMemberAchievements(X_API_KEY, spaceName, memberId, limit, skip, sortByFields, include, lang, equal, equalEqual, lessThanEqual, lessThanEqualEqual, equalGreaterThan, equalEqualGreaterThan, deprecated, achievementLiveStatus, initialState);
        
        // TODO: test validations
    }
    
    /**
     * Returns a list of achievements by member ref id
     *
     * Returns a simplified list of available Achievements.  This assumes that achievements have first been created using the web console. Otherwise no data is returned and the value of the \&quot;totalRecordsFound\&quot; variable in the metadata section of the response is 0.  GET responses can be filtered out based on the achievement parameters to narrow down the results.  &#x60;Requesting a list of Achievements a response will show Achievements that are in Live state and/or Expired.&#x60;   &#x60;Achievements that are in Draft state or Deprecated - will not be displayed.&#x60;   Include query parameter options are:  &#x60;?_include&#x3D;ruleSets&#x60; &#x60;?_include&#x3D;dependantOn&#x60; &#x60;?_include&#x3D;products&#x60; &#x60;?_include&#x3D;metadata&#x60; &#x60;?_include&#x3D;rewards&#x60;  or multiple at the same time: &#x60;?_include&#x3D;products,metadata,ruleSets,dependantOn,rewards&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMemberAchievementsByRefIdTest() throws ApiException {
        String X_API_KEY = null;
        String spaceName = null;
        String memberRefId = null;
        Integer limit = null;
        Integer skip = null;
        String sortByFields = null;
        String include = null;
        String lang = null;
        String equal = null;
        String equalEqual = null;
        String lessThanEqual = null;
        String lessThanEqualEqual = null;
        String equalGreaterThan = null;
        String equalEqualGreaterThan = null;
        Boolean deprecated = null;
        String achievementLiveStatus = null;
        Integer initialState = null;
        CompletableFuture<AchievementResponse> response = 
        api.getMemberAchievementsByRefId(X_API_KEY, spaceName, memberRefId, limit, skip, sortByFields, include, lang, equal, equalEqual, lessThanEqual, lessThanEqualEqual, equalGreaterThan, equalEqualGreaterThan, deprecated, achievementLiveStatus, initialState);
        
        // TODO: test validations
    }
    
}
