/*
 * Copyright (c) 2022. ZIQNI LTD registered in England and Wales, company registration number-09693684
 */

/*
 * Ziqni Gateway Services
 * These are the Gateway services to be used by customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.gateway.client.api;

import com.ziqni.gateway.client.ApiException;
import com.ziqni.gateway.client.api.MemberMessagesApi;
import com.ziqni.gateway.client.model.ApiErrorResponse;
import com.ziqni.gateway.client.model.Error;
import com.ziqni.gateway.client.model.MemberMessageResponse;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import java.util.concurrent.CompletableFuture;

/**
 * API tests for MemberMessagesApi
 */

public class MemberMessagesApiTest {

    private final MemberMessagesApi api = new MemberMessagesApi();

    
    /**
     * Returns messages for a member by requested id
     *
     * Returns member message details for the member and message ID specified. When a message with a status of New is accessed by this endpoint then the status of the message becomes Read automatically.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMessageByIdAndMemberIdTest() throws ApiException {
        String X_API_KEY = null;
        String spaceName = null;
        String memberId = null;
        String id = null;
        CompletableFuture<MemberMessageResponse> response = 
        api.getMessageByIdAndMemberId(X_API_KEY, spaceName, memberId, id);
        
        // TODO: test validations
    }
    
    /**
     * Returns messages for a member by requested id
     *
     * Returns member message details for the member and message ID specified. When a message with a status of New is accessed by this endpoint then the status of the message becomes Read automatically.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMessageByIdAndMemberRefIdTest() throws ApiException {
        String X_API_KEY = null;
        String spaceName = null;
        String memberRefId = null;
        String id = null;
        CompletableFuture<MemberMessageResponse> response = 
        api.getMessageByIdAndMemberRefId(X_API_KEY, spaceName, memberRefId, id);
        
        // TODO: test validations
    }
    
    /**
     * Returns messages for a member by requested id
     *
     * Returns a list of available messages for the specified memberId.  GET responses can be filtered out based on the member messages parameters to narrow down the results.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMessagesByMemberIdTest() throws ApiException {
        String X_API_KEY = null;
        String spaceName = null;
        List<String> id = null;
        String eventRefType = null;
        String eventReferenceId = null;
        String messageType = null;
        String subject = null;
        String prizeRewardEntityType = null;
        String prizeRewardEntityId = null;
        String prizeRewardRewardRank = null;
        Double prizeRewardValue = null;
        String prizeRewardRewardType = null;
        Integer prizeRewardDelay = null;
        Boolean prizeRewardMemberAcknowledgmentRequired = null;
        String prizeRewardMetadataKey = null;
        String prizeRewardMetadataValue = null;
        OffsetDateTime prizeRewardCreated = null;
        String prizeRewardId = null;
        Boolean prizeClaimed = null;
        String prizeEntityType = null;
        String prizeEntityId = null;
        OffsetDateTime prizeCreated = null;
        String prizeId = null;
        String status = null;
        OffsetDateTime created = null;
        String metadataKey = null;
        String metadataValue = null;
        CompletableFuture<MemberMessageResponse> response = 
        api.getMessagesByMemberId(X_API_KEY, spaceName, id, eventRefType, eventReferenceId, messageType, subject, prizeRewardEntityType, prizeRewardEntityId, prizeRewardRewardRank, prizeRewardValue, prizeRewardRewardType, prizeRewardDelay, prizeRewardMemberAcknowledgmentRequired, prizeRewardMetadataKey, prizeRewardMetadataValue, prizeRewardCreated, prizeRewardId, prizeClaimed, prizeEntityType, prizeEntityId, prizeCreated, prizeId, status, created, metadataKey, metadataValue);
        
        // TODO: test validations
    }
    
    /**
     * Returns messages for a member by requested reference id
     *
     * Returns a list of available messages for the specified member Reference ID.  GET responses can be filtered out based on the member messages parameters to narrow down the results.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMessagesByMemberRefIdTest() throws ApiException {
        String X_API_KEY = null;
        String spaceName = null;
        String memberRefId = null;
        String eventRefType = null;
        String eventReferenceId = null;
        String messageType = null;
        String subject = null;
        String prizeRewardEntityType = null;
        String prizeRewardEntityId = null;
        String prizeRewardRewardRank = null;
        Double prizeRewardValue = null;
        String prizeRewardRewardType = null;
        Integer prizeRewardDelay = null;
        Boolean prizeRewardMemberAcknowledgmentRequired = null;
        String prizeRewardMetadataKey = null;
        String prizeRewardMetadataValue = null;
        OffsetDateTime prizeRewardCreated = null;
        String prizeRewardId = null;
        Boolean prizeClaimed = null;
        String prizeEntityType = null;
        String prizeEntityId = null;
        OffsetDateTime prizeCreated = null;
        String prizeId = null;
        String status = null;
        OffsetDateTime created = null;
        String metadataKey = null;
        String metadataValue = null;
        List<String> id = null;
        CompletableFuture<MemberMessageResponse> response = 
        api.getMessagesByMemberRefId(X_API_KEY, spaceName, memberRefId, eventRefType, eventReferenceId, messageType, subject, prizeRewardEntityType, prizeRewardEntityId, prizeRewardRewardRank, prizeRewardValue, prizeRewardRewardType, prizeRewardDelay, prizeRewardMemberAcknowledgmentRequired, prizeRewardMetadataKey, prizeRewardMetadataValue, prizeRewardCreated, prizeRewardId, prizeClaimed, prizeEntityType, prizeEntityId, prizeCreated, prizeId, status, created, metadataKey, metadataValue, id);
        
        // TODO: test validations
    }
    
}
