/*
 * Copyright (c) 2022. ZIQNI LTD registered in England and Wales, company registration number-09693684
 */

/*
 * Ziqni Gateway Services
 * These are the Gateway services to be used by customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.gateway.client.api;

import com.ziqni.gateway.client.ApiException;
import com.ziqni.gateway.client.api.WidgetsApi;
import com.ziqni.gateway.client.model.AchievementResponse;
import com.ziqni.gateway.client.model.ApiErrorResponse;
import com.ziqni.gateway.client.model.Error;
import com.ziqni.gateway.client.model.WidgetByIdResponse;
import com.ziqni.gateway.client.model.WidgetResponse;
import org.junit.jupiter.api.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import java.util.concurrent.CompletableFuture;

/**
 * API tests for WidgetsApi
 */

public class WidgetsApiTest {

    private final WidgetsApi api = new WidgetsApi();

    
    /**
     * Returns a widget information for specific id
     *
     * Returns the information for a specific widget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWidgetByIdTest() throws ApiException {
        String X_API_KEY = null;
        String spaceName = null;
        String id = null;
        CompletableFuture<WidgetByIdResponse> response = 
        api.getWidgetById(X_API_KEY, spaceName, id);
        
        // TODO: test validations
    }
    
    /**
     * Returns the information of live achievements for a given Widget ID
     *
     * Returns the information of live achievements for a given Widget ID  &#x60;Achievements that are in the widget but are deprecated/archived will not be shown in the response&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWidgetPreviewByIdTest() throws ApiException {
        String X_API_KEY = null;
        String spaceName = null;
        String widgetId = null;
        Integer limit = null;
        Integer skip = null;
        CompletableFuture<AchievementResponse> response = 
        api.getWidgetPreviewById(X_API_KEY, spaceName, widgetId, limit, skip);
        
        // TODO: test validations
    }
    
    /**
     * Returns a list of widgets
     *
     * Returns the information for all the widgets.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWidgetsTest() throws ApiException {
        String X_API_KEY = null;
        String spaceName = null;
        List<String> id = null;
        Integer limit = null;
        Integer skip = null;
        String sortByFields = null;
        String include = null;
        String lang = null;
        String equal = null;
        String equalEqual = null;
        String lessThanEqual = null;
        String lessThanEqualEqual = null;
        String equalGreaterThan = null;
        String equalEqualGreaterThan = null;
        CompletableFuture<WidgetResponse> response = 
        api.getWidgets(X_API_KEY, spaceName, id, limit, skip, sortByFields, include, lang, equal, equalEqual, lessThanEqual, lessThanEqualEqual, equalGreaterThan, equalEqualGreaterThan);
        
        // TODO: test validations
    }
    
}
